<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<qualifiedTypeNameHistroy>
<fullyQualifiedTypeName name="org.springframework.web.client.RestTemplate"/>
<fullyQualifiedTypeName name="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter"/>
<fullyQualifiedTypeName name="com.pojo.CityInfo"/>
<fullyQualifiedTypeName name="org.springframework.web.bind.annotation.ResponseBody"/>
<fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RequestMethod"/>
<fullyQualifiedTypeName name="java.net.URL"/>
<fullyQualifiedTypeName name="java.util.concurrent.atomic.AtomicLong"/>
<fullyQualifiedTypeName name="com.pojo.Weather"/>
<fullyQualifiedTypeName name="com.interfaces.WeatherInterface"/>
<fullyQualifiedTypeName name="com.cdyne.ws.weatherws.GetCityForecastByZIP"/>
<fullyQualifiedTypeName name="com.cdyne.ws.weatherws.ForecastReturn"/>
<fullyQualifiedTypeName name="com.cdyne.ws.weatherws.Forecast"/>
<fullyQualifiedTypeName name="com.cdyne.ws.weatherws.Temp"/>
<fullyQualifiedTypeName name="org.springframework.boot.CommandLineRunner"/>
<fullyQualifiedTypeName name="hello.WeatherClient"/>
<fullyQualifiedTypeName name="com.cdyne.ws.weatherws.GetCityForecastByZIPResponse"/>
<fullyQualifiedTypeName name="org.springframework.beans.factory.annotation.Autowired"/>
<fullyQualifiedTypeName name="com.example.client.Weatherclient"/>
<fullyQualifiedTypeName name="com.weatherws.GetCityWeatherByZIPResponse"/>
<fullyQualifiedTypeName name="com.fasterxml.jackson.annotation.JsonProperty"/>
<fullyQualifiedTypeName name="org.springframework.web.servlet.config.annotation.ViewControllerRegistry"/>
<fullyQualifiedTypeName name="org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter"/>
<fullyQualifiedTypeName name="javax.servlet.http.HttpServletRequest"/>
<fullyQualifiedTypeName name="javax.servlet.http.HttpServletResponse"/>
<fullyQualifiedTypeName name="org.springframework.security.web.authentication.SimpleUrlAuthenticationFailureHandler"/>
<fullyQualifiedTypeName name="org.springframework.security.core.AuthenticationException"/>
<fullyQualifiedTypeName name="java.io.IOException"/>
<fullyQualifiedTypeName name="javax.servlet.ServletException"/>
<fullyQualifiedTypeName name="com.security.ApplicationSecurity"/>
<fullyQualifiedTypeName name="org.apache.log4j.Logger"/>
<fullyQualifiedTypeName name="org.apache.log4j.spi.LoggerFactory"/>
<fullyQualifiedTypeName name="org.apache.commons.logging.LogFactory"/>
<fullyQualifiedTypeName name="org.apache.commons.logging.Log"/>
<fullyQualifiedTypeName name="org.springframework.security.authentication.AuthenticationManager"/>
<fullyQualifiedTypeName name="org.springframework.security.config.annotation.web.servlet.configuration.EnableWebMvcSecurity"/>
<fullyQualifiedTypeName name="org.springframework.security.config.annotation.method.configuration.EnableGlobalMethodSecurity"/>
<fullyQualifiedTypeName name="org.springframework.security.core.userdetails.UserDetailsService"/>
<fullyQualifiedTypeName name="com.security.RESTAuthenticationEntryPoint"/>
<fullyQualifiedTypeName name="org.springframework.security.config.annotation.web.configuration.EnableWebSecurity"/>
<fullyQualifiedTypeName name="javax.annotation.security.RolesAllowed"/>
<fullyQualifiedTypeName name="org.springframework.cache.annotation.EnableCaching"/>
<fullyQualifiedTypeName name="org.springframework.cache.annotation.CacheConfig"/>
<fullyQualifiedTypeName name="org.springframework.cache.annotation.Cacheable"/>
<fullyQualifiedTypeName name="org.springframework.boot.autoconfigure.security.SecurityAutoConfiguration"/>
<fullyQualifiedTypeName name="org.springframework.security.config.annotation.authentication.configurers.GlobalAuthenticationConfigurerAdapter"/>
<fullyQualifiedTypeName name="org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder"/>
<fullyQualifiedTypeName name="org.springframework.core.annotation.Order"/>
<fullyQualifiedTypeName name="org.springframework.boot.autoconfigure.security.SecurityProperties"/>
<fullyQualifiedTypeName name="org.springframework.cloud.bootstrap.config.PropertySourceLocator"/>
<fullyQualifiedTypeName name="org.springframework.context.annotation.Bean"/>
<fullyQualifiedTypeName name="org.springframework.core.env.ConfigurableEnvironment"/>
<fullyQualifiedTypeName name="org.springframework.util.StringUtils"/>
<fullyQualifiedTypeName name="org.springframework.beans.factory.annotation.Value"/>
<fullyQualifiedTypeName name="org.springframework.boot.context.web.SpringBootServletInitializer"/>
<fullyQualifiedTypeName name="org.springframework.boot.builder.SpringApplicationBuilder"/>
<fullyQualifiedTypeName name="org.springframework.boot.autoconfigure.EnableAutoConfiguration"/>
<fullyQualifiedTypeName name="org.springframework.context.annotation.ComponentScan"/>
<fullyQualifiedTypeName name="org.springframework.context.annotation.Configuration"/>
<fullyQualifiedTypeName name="org.springframework.cloud.config.server.EnableConfigServer"/>
<fullyQualifiedTypeName name="org.springframework.cloud.context.config.annotation.RefreshScope"/>
</qualifiedTypeNameHistroy>
