package com.example;

import java.util.concurrent.atomic.AtomicLong;

import javax.annotation.security.RolesAllowed;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.cache.annotation.CacheConfig;
import org.springframework.cache.annotation.Cacheable;
import org.springframework.http.converter.json.MappingJackson2HttpMessageConverter;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.client.RestTemplate;

import com.example.client.Weatherclient;
import com.pojo.CityInfo;
import com.weatherws.GetCityWeatherByZIPResponse;

@RestController
@RolesAllowed("USER")
public class GreetingController {

    private static final String template = "Hello, %s!";
    private final AtomicLong counter = new AtomicLong();
    
    @Autowired
    Weatherclient weatherclient;

    @RequestMapping("/greeting")
    public Greeting greeting(@RequestParam(value="name", defaultValue="World") String name) {
        return new Greeting(counter.incrementAndGet(),
                            String.format(template, name));
    }
    
    
    @RequestMapping(value = "/temperature/us", method = RequestMethod.GET, produces = "application/json")
    @ResponseBody
    @Cacheable(value = "{type,String}")
    public String getZipcodeByStateCity(@RequestParam String state, @RequestParam String city) {
       System.out.println(" i am in  ");
    	// Create a new RestTemplate instance
    	RestTemplate restTemplate = new RestTemplate();
    	String url = "http://api.zippopotam.us/us/"+state+"/"+city;
    	// Add the Jackson message converter
    	restTemplate.getMessageConverters().add(new MappingJackson2HttpMessageConverter());

    	// Make the HTTP GET request, marshaling the response from JSON to an array of Events
    	CityInfo events = restTemplate.getForObject(url, CityInfo.class);
    	
    	String zipcode = events.getPlaces().get(0).getPostCode();
    	
    	GetCityWeatherByZIPResponse response = weatherclient.GetCityWeatherByZIP(zipcode);
    	
    	String temp = response.getGetCityWeatherByZIPResult().getTemperature();
    	 System.out.println(" i am out  ");
    	return temp;
    }
    
    
    
}
